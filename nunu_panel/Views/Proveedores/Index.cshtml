@model List<nunu_panel.Models.ProveedorModel>
@{
    ViewData["Title"] = "Proveedores";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container">
    <div class="row mb-3">
        <div class="col-md-12">
            <div class="form-group">
                <input type="text" name="" id="textoLibre" class="form-control" placeholder="Busca por proveedor/ID">
            </div>
            @* <form asp-controller="Pedidos" asp-action="Index">
                <div class="groupSearch">
                    <svg class="iconSearch" aria-hidden="true" viewBox="0 0 24 24">
                        <g>
                            <path
                                d="M21.53 20.47l-3.66-3.66C19.195 15.24 20 13.214 20 11c0-4.97-4.03-9-9-9s-9 4.03-9 9 4.03 9 9 9c2.215 0 4.24-.804 5.808-2.13l3.66 3.66c.147.146.34.22.53.22s.385-.073.53-.22c.295-.293.295-.767.002-1.06zM3.5 11c0-4.135 3.365-7.5 7.5-7.5s7.5 3.365 7.5 7.5-3.365 7.5-7.5 7.5-7.5-3.365-7.5-7.5z">
                            </path>
                        </g>
                    </svg>
                    <input value="" id="textoLibre" name="searchTerm" placeholder="Busca por proveedor/ID"
                        type="search" class="inputSearch">
                </div>
            </form> *@
        </div>
    </div>
    <div class="row">
        <div class="d-flex justify-content-between align-items-center">
            <h4 class="title-form">Proveedores</h4>
            @* <button type="button" class="btn btn-filter" data-bs-toggle="modal" data-bs-target="#filterModal">
            <i class="fas fa-filter"></i> <!-- Icono de filtro -->
            </button> *@
            <div class="mb-3" id="filterForm">

                @* <label for="filterVerified" class="form-label">Filtrar por estado de verificación:</label>
                <select id="filterVerified" class="form-select" onchange="filterTable()">
                    <option value="all">Todos</option>
                    <option value="verified">Verificados</option>
                    <option value="notVerified">No verificados</option>
                </select> *@
            </div>

        </div>
    </div>

    <div class="row">
        <div class="breadcrumb">
            <a href="/Proveedores" class="breadcrumb-item active">Proveedores</a> >
        </div>
        @* Mostrando @Model.Count *@
    </div>

    <div class="col-md-12 mt-3 table-responsive">
        <table class="table" id="dataTable">
            <thead>
                <tr>
                    <th scope="col" class="">ID</th>
                    <th scope="col" class="">Estatus</th>
                    <th scope="col" class="">Proveedor</th>
                    @* <th scope="col" class="textTableCenter">Ciudad</th> *@
                    @* <th scope="col" class="textTableCenter">Reputación</th> *@
                    <th scope="col" class="">Documentos</th>
                    <th scope="col" class="">Teléfono</th>
                    <th scope="col" class="">Fecha de registro</th>
                    <th scope="col" class="">Pausado</th>
                    <th scope="col" class="">Motivo</th>
                    <th scope="col" class=""></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var proveedor in Model)
                {
                    <tr class="provider-row @(proveedor.verificado ? "verified" : "not-verified")">
                        <td class="td-first">@proveedor.id_proveedor</td>
                        @if (proveedor.verificado)
                        {
                            <td class="td-middle"><span class="badge-custom aprobado" data-bs-toggle="modal"
                                    data-bs-target="#leftModal" style="cursor:pointer;">Verificado</span></td>
                        }
                        else
                        {
                            <td class="td-middle"><span class="badge-custom en-camino" data-bs-toggle="modal"
                                    data-bs-target="#leftModal" style="cursor:pointer;">Revisar</span></td>
                        }
                        <td class="td-middle">@proveedor.nombre_razon_social</td>
                        <td class="td-middle">
                            <a href="#" data-bs-toggle="modal" data-bs-target="#filterModal"
                                data-isApproved="@proveedor.verificado"
                                data-id="@proveedor.id_proveedor" data-antecedentes="@proveedor.antecedentes_penales"
                                data-ine-frente="@proveedor.ine_frente" data-ine-reverso="@proveedor.ine_reverso"
                                data-curriculum="@proveedor.curriculum"
                                data-comprobante-domicilio="@proveedor.comprobante_domicilio">
                                Ver documentos
                            </a>
                        </td>
                        <td class="td-middle">@proveedor.telefono</td>
                        <td class="td-middle">@proveedor.fecha_registro.ToString("dd/MM/yyyy")</td>
                        <td class="td-middle">@(proveedor.suspendido ? "Si" : "No")</td>
                        <td class="td-middle">@(proveedor.suspendido ? proveedor.motivoSuspension : "")</td>
                        <td class="td-end">
                            <div class="dropdown">
                                <button class="btn dropdown-toggle text-dark" type="button" id="dropdownMenuButton1"
                                    data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    <i class="fas fa-ellipsis-v"></i>
                                </button>
                                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
                                    <a class="dropdown-item" data-bs-toggle="modal" data-bs-target="#deleteUserModal"
                                        data-id="@proveedor.id_proveedor" data-name="@proveedor.nombre_razon_social">Dar de baja</a>
                                    @if(!proveedor.suspendido){
                                        <a class="dropdown-item" data-bs-toggle="modal" data-bs-target="#leftModal"
                                        data-id="@proveedor.id_proveedor" data-name="@proveedor.nombre_razon_social">Pausar proveedor</a>
                                    }else{
                                        <a class="dropdown-item" data-bs-toggle="modal" data-bs-target="#rightModal"
                                        data-id="@proveedor.id_proveedor" data-name="@proveedor.nombre_razon_social">Reactivar proveedor</a>
                                    }
                                </div>
                            </div>
                        </td>
                    </tr>
                }




            </tbody>
        </table>
    </div>
</div>

<div class="modal fade" id="deleteUserModal" tabindex="-1" aria-labelledby="deleteUserModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteUserModalLabel">Eliminar Proveedor</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div id="deleteModalBody" class="modal-body">
                ¿Estás seguro que deseas eliminar a este proveedor?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteButton">Eliminar</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade modal-right" id="filterModal" tabindex="-1" aria-labelledby="filterModalLabel"
    aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="rightModalLabel">Documentos</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form>
                    <input type="hidden" id="idproveedor" placeholder="idder" />
                    @* <div class="form-group">
                        <label>Antecedentes penales:</label>
                        <div class="input-group mb-3">
                            <input type="text" class="form-control" id="antecedentes" placeholder="ANTECEDENTES">
                            <div class="input-group-append">
                                <button class="btn btn-outline-secondary view-document-button" type="button"
                                    data-input-id="antecedentes">VER</button>
                            </div>
                        </div>
                    </div> *@
                    <div class="form-group">
                        <label>Curriculum</label>
                        <div class="input-group mb-3">
                            <input type="text" class="form-control" id="curriculum" placeholder="Curriculum">
                            <div class="input-group-append">
                                <button class="btn btn-outline-secondary view-document-button" type="button"
                                    data-input-id="curriculum">VER</button>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label>INE Frente:</label>
                        <div class="input-group mb-3">
                            <input type="text" class="form-control" id="ineFrente" placeholder="INE FRENTE">
                            <div class="input-group-append">
                                <button class="btn btn-outline-secondary view-document-button" type="button"
                                    data-input-id="ineFrente">VER</button>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label>INE Reverso:</label>
                        <div class="input-group mb-3">
                            <input type="text" class="form-control" id="ineReverso" placeholder="INE DETRAS">
                            <div class="input-group-append">
                                <button class="btn btn-outline-secondary view-document-button" type="button"
                                    data-input-id="ineReverso">VER</button>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label>Comprobante de domicilio:</label>
                        <div class="input-group mb-3">
                            <input type="text" class="form-control" id="comprobanteDomicilio"
                                placeholder="Comprobante de domicilio">
                            <div class="input-group-append">
                                <button class="btn btn-outline-secondary view-document-button" type="button"
                                    data-input-id="comprobanteDomicilio">VER</button>
                            </div>
                        </div>
                    </div>
                </form>
                <hr>
                <button class="btn btn-success w-100" data-id="" data-bs-toggle="modalDocumentos"
                    data-bs-dismiss="modal" id="aprovarProveedor">Aprobar</button>
                    <button class="btn btn-danger w-100 mt-2"data-bs-toggle="modal"  data-bs-target="#RejectModal" id="rechazarProveedor">Rechazar</button>
                <button class="btn btn-primary w-100 mt-2" data-bs-dismiss="modal"  data-bs-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="successModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Éxito</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p id="modalMessage"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"
                    onclick="location.reload();">Cerrar</button>
            </div>
        </div>
    </div>
</div>

@* Pausar proveedor Modal*@
<div class="modal fade" id="leftModal" tabindex="-1" aria-labelledby="leftModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="leftModalLabel">Pausar proveedor</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div>
                    <p>Para pausar a este proveedor, ingrese la razón de la pausa:</p>
                    <textarea class="form-control" id="leftReason" rows="4"></textarea>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-danger" id="confirmLeftButton">Pausar</button>
            </div>
        </div>
    </div>
</div>

@* Reactivar proveedor Modal *@
<div class="modal fade" id="rightModal" tabindex="-1" aria-labelledby="rightModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content"> 
            <div class="modal-header">
                <h5 class="modal-title" id="rightModalLabel">Reactivar proveedor</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>  
            <div class="modal-body">
                <p>¿Estás seguro que deseas reactivar a este proveedor?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-success" id="confirmRightButton">Reactivar</button>
            </div>
        </div>
    </div>
</div>  

@* Rechazar proveedor Modal *@
<div class="modal fade" id="RejectModal" tabindex="-1" aria-labelledby="RejectModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="RejectModalLabel">Rechazar proveedor</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div>
                    <p>Para rechazar a este proveedor, ingrese la razón del rechazo:</p>
                    <textarea class="form-control" id="rejectReason" rows="4"></textarea>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-danger" id="confirmRejectButton">Rechazar</button>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>


<script>
    @* function filterTable() {
        var filter = document.getElementById("filterVerified").value;
        var rows = document.querySelectorAll(".provider-row");

        rows.forEach(function (row) {
            if (filter === "all") {
                row.style.display = "";
            } else if (filter === "verified" && row.classList.contains("verified")) {
                row.style.display = "";
            } else if (filter === "notVerified" && row.classList.contains("not-verified")) {
                row.style.display = "";
            } else {
                row.style.display = "none";
            }
        });

    } *@



        var filterModal = document.getElementById('filterModal');
        filterModal.addEventListener('show.bs.modal', function (event) {
        var button = event.relatedTarget;
        var id = button.getAttribute('data-id');
        var antecedentes = button.getAttribute('data-antecedentes');
        var ineFrente = button.getAttribute('data-ine-frente');
        var ineReverso = button.getAttribute('data-ine-reverso');
        var curriculum = button.getAttribute('data-curriculum');
        let isApproved = button.getAttribute('data-isApproved');
        var comprobanteDomicilio = button.getAttribute('data-comprobante-domicilio');
        filterModal.querySelector('input[placeholder="idder"]').value = id;
        filterModal.querySelector('input[placeholder="INE FRENTE"]').value = ineFrente;
        filterModal.querySelector('input[placeholder="INE DETRAS"]').value = ineReverso;
        filterModal.querySelector('input[placeholder="Curriculum"]').value = curriculum;
        filterModal.querySelector('input[placeholder="Comprobante de domicilio"]').value = comprobanteDomicilio;
        aprovarProveedor.textContent = isApproved === "True" ? "Ya Aprobado" : "Aprobar";
        rechazarProveedor.textContent = isApproved === "True" ? "Ya Aprobado" : "Rechazar";
        if (isApproved === "True") {
            aprovarProveedor.disabled = true;
            rechazarProveedor.disabled = true;
        }else{
            aprovarProveedor.disabled = false;
            rechazarProveedor.disabled = false;
        }


    });


    @* const searchInput = document.getElementById('searchInput');
    const table = document.querySelector('.table tbody');

    searchInput.addEventListener('keyup', function () {
        const searchTerm = searchInput.value.toLowerCase();
        const rows = table.querySelectorAll('tr');

        rows.forEach(function (row) {
            const idCell = row.querySelector('td:nth-child(1)');
            const nameCell = row.querySelector('td:nth-child(3)');

            const idText = idCell.textContent.toLowerCase();
            const nameText = nameCell.textContent.toLowerCase();

            if (idText.includes(searchTerm) || nameText.includes(searchTerm)) {
                row.style.display = '';
            } else {
                row.style.display = 'none';
            }
        });
    }); *@
    document.querySelectorAll('.view-document-button').forEach(function (button) {
        button.addEventListener('click', function () {
            var inputId = this.getAttribute('data-input-id');
            var inputValue = document.getElementById(inputId).value;
            if (inputValue) {
                window.open(inputValue, '_blank');
            } else {
                alert('No se ha proporcionado un enlace válido.');
            }
        });
    });

    const deleteUserModal = new bootstrap.Modal(document.getElementById('deleteUserModal'));
    const confirmDeleteButton = document.getElementById('confirmDeleteButton');
    
    let userIdToDelete;
    let nameToDelete;

    document.querySelectorAll('[data-bs-toggle="modal"]').forEach(function (button) {
        button.addEventListener('click', function () {
            userIdToDelete = this.getAttribute('data-id');
            nameToDelete = this.getAttribute('data-name');
           deleteModalBody.innerText = `¿Estás seguro que deseas eliminar a ${nameToDelete}?`;
            console.log(userIdToDelete);
        });
    });

    confirmDeleteButton.addEventListener('click', function () {
        Swal.fire({
            title: 'Seguro que deseas eliminar?',
            showCancelButton: true,
            confirmButtonText: 'Eliminar',
            cancelButtonText: 'Cancelar',
            allowOutsideClick: false,
            allowEscapeKey: false,
            confirmButtonColor: '#d33',
        }).then((result) => {
            if (result.isConfirmed) {
                   Swal.fire({
            title: 'Eliminando proveedor',
            allowOutsideClick: false,
            allowEscapeKey: false,
            didOpen: () => {
                Swal.showLoading();
            }
        })
        fetch(`/Proveedores/EliminarProveedor?idProveedor=${userIdToDelete}`, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json',
            }
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    document.querySelector(`a[data-id="${userIdToDelete}"]`).closest('tr').remove();
                    deleteUserModal.hide();
                    const modalMessage = document.getElementById('modalMessage');
                    $('#successModal').modal('show');
                    modalMessage.innerText = data.message;
                   setTimeout(function () {
                        window.location.reload();
                   },500)
                } else {
                    alert(data.message);
                }
            })
            .catch(error => console.error('Error:', error)).finally(() => Swal.close());
            }
        })
        
    
    });
    document.querySelectorAll('[data-bs-toggle="modal"]').forEach(function (button) {
        button.addEventListener('click', function () {
            userIdToDelete = this.getAttribute('data-id');
            console.log(userIdToDelete);
        });
    });
    const filtroModal = new bootstrap.Modal(document.getElementById('filterModal'));
    document.getElementById('aprovarProveedor').addEventListener('click', function () {
        
        var idderpro = document.getElementById("idproveedor").value;
        Swal.fire({
            title: 'Verificando documentos',
            allowOutsideClick: false,
            allowEscapeKey: false,
            didOpen: () => {
                Swal.showLoading();
            }
        })
        fetch(`/Proveedores/AprovarProveedor?idProveedor=${idderpro}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            }
        })
            .then(response => response.ok ? response.json() : Promise.reject(response))
            .then(data => {
                Swal.close();
                if (data && data.success) {
                    filtroModal.hide();
                    //alert(data.message);
                    const modalMessage = document.getElementById('modalMessage');
                    $('#successModal').modal('show');
                    modalMessage.innerText = data.message;
                } 
            })
            .catch(error =>  alert(data.message));
    });
</script>

<script>
    const confirmLeftButton = document.getElementById('confirmLeftButton');
    confirmLeftButton.addEventListener('click', function () {
    const leftReason = document.getElementById('leftReason').value;

    if (!leftReason.trim()) {
        Swal.fire({
            title: 'Error',
            text: 'Por favor, proporciona un motivo para pausar al proveedor.',
            icon: 'warning'
        });
        return;
    }

    Swal.fire({
        title: 'Pausando proveedor',
        allowOutsideClick: false,
        allowEscapeKey: false,
        didOpen: () => {
            Swal.showLoading();
        }
    });

    fetch(`/Proveedores/PausarProveedor/${userIdToDelete}/${leftReason}`, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
    })
        .then(response => {
            if (!response.ok) {
                return response.json().then(err => {
                    throw new Error(err.message || 'Error al pausar el proveedor');
                });
            }
            return response.json();
        })
        .then(data => {
            Swal.fire({
                title: 'Proveedor pausado',
                text: 'Proveedor pausado con éxito',
                icon: 'success',
                didClose: () => {
                    window.location.reload();
                }
            });
        })
        .catch(error => {
            Swal.fire({
                title: 'Error',
                text: error.message || 'Error al pausar el proveedor',
                icon: 'error'
            });
        })
        .finally(() => {
            Swal.close();
        });
});


    const confirmRightButton = document.getElementById('confirmRightButton');
    confirmRightButton.addEventListener('click', function () {
        Swal.fire({
            title: 'Reactivando proveedor',
            allowOutsideClick: false,
            allowEscapeKey: false,
            didOpen: () => {
                Swal.showLoading();
                }
            }) 
        fetch(`/Proveedores/ReactivarProveedor/${userIdToDelete}/Usuario Reactivado`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            
        }).then(response => {
            if(!response.ok){
               throw new Error('Error al reactivar el proveedor');
            }
            Swal.fire({
                title: 'Proveedor reactivado',
                text: 'Proveedor reactivado con éxito',
                icon: 'success',
                didClose: () => {
                    window.location.reload();
                }
            }).catch(error => Swal.fire({
                title: 'Error',
                text: 'Error al reactivar el proveedor',
                icon: 'error'
               })).finally(() => Swal.close());
        })
    });

    const confirmRejectButton = document.getElementById('confirmRejectButton');
    confirmRejectButton.addEventListener('click', function () {
            Swal.fire({
                title: 'Estas seguro de rechazar a este proveedor?',
                allowOutsideClick: false,
                allowEscapeKey: false,
                showCancelButton: true,
                confirmButtonText: 'Rechazar',
                cancelButtonText: 'Cancelar',
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
            }).then((result) => {
                if (result.isConfirmed) {
                    Swal.fire({
                        title: 'Rechazando proveedor',
                        allowOutsideClick: false,
                        allowEscapeKey: false,
                        didOpen: () => {
                            Swal.showLoading();
                        }
                    })
                    fetch(`/Proveedores/RechazarProveedor/${idproveedor.value}/${rejectReason.value}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                    })
                    .then(response => {
                        if(!response.ok){
                            throw new Error('Error al rechazar el proveedor');
                        }
                         Swal.fire({
                            title: 'Proveedor rechazado',
                            text: 'Proveedor rechazado con éxito',
                            icon: 'success',
                            didClose: () => {
                                window.location.reload();
                            }
                        })
                    })
                   
                    .catch(error => Swal.fire({
                        title: 'Error',
                        text: 'Error al rechazar el proveedor',
                        icon: 'error'
                    })).finally(() => Swal.close());
                }
            })

    });
</script>

@section Scripts{
    
<script>
    inicializarTable('#dataTable');
    filtrar('#dataTable',1,'','','','')
</script>
}